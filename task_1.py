# 1)Даны значения величины заработной платы заемщиков
# банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных
# действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации
# и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.

import pandas as pd
import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

cov_zp_kz = np.mean(zp*ks) - np.mean(zp)*np.mean(ks)

print(f'С помощью элементарных действий: {round(cov_zp_kz,3)}')

cov_mat = np.cov(zp, ks, ddof=0)

print(f'С помощью функции cov: {round(cov_mat[0][1], 3)}')

r = cov_zp_kz/(np.std(zp, ddof=0)*np.std(ks, ddof=0))

print(f'Коэффициент корреляции Пирсона: {r}')
arr_2 = np.corrcoef(zp, ks)
print(f'Коэффициент корреляции Пирсона с использованием библиотеки numpy: {arr_2[0,1]}\n{np.corrcoef(zp, ks)}')

dict_zp_ks = {"zp": pd.Series([35, 45, 190, 200, 40, 70, 54, 150, 120, 110]),
              "ks": pd.Series([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])}

df = pd.DataFrame(dict_zp_ks)

df.corr()
print(f'С использованием библиотеки pandas: \n{df.corr()}')
